{"version":3,"sources":["Components/Form/Form.js","Components/Contacts/Contacts.js","App.js","index.js"],"names":["Form","state","name","handleChange","event","setState","target","value","handleSubmit","preventDefault","props","onSubmit","formReset","this","type","pattern","title","required","onChange","Component","Contacts","contacts","map","contact","id","App","formSubmitHandler","data","uuidv4","prevState","handleIncrement","option","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPA6CeA,E,4MA1CbC,MAAQ,CACNC,KAAM,I,EAGRC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEH,KAAME,EAAME,OAAOC,S,EAGrCC,aAAe,SAAAJ,GACbA,EAAMK,iBACN,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,MAE/B,EAAKU,a,EAGPA,UAAY,WACV,EAAKP,SAAS,CACZH,KAAM,M,4CAIV,WACE,OACE,uBAAMS,SAAUE,KAAKL,aAArB,UACE,yCAEE,uBACED,MAAOM,KAAKZ,MAAMC,KAClBY,KAAK,OACLZ,KAAK,OACLa,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUL,KAAKV,kBAGnB,wD,GArCWgB,aCEJC,EAJE,SAAC,GAChB,OADiC,EAAfC,SACFC,KAAI,SAAAC,GAAO,OAAI,6BAAsBA,EAAQrB,MAArBqB,EAAQC,QC0CnCC,E,4MApCbxB,MAAQ,CACNoB,SAAU,GACVnB,KAAM,I,EAGRwB,kBAAoB,SAAAC,GAClB,IAAMJ,EAAU,CACdrB,KAAMyB,EACNH,GAAII,eAGN,EAAKvB,UAAS,SAAAwB,GAAS,MAAK,CAC1BR,SAAS,GAAD,mBAAMQ,EAAUR,UAAhB,CAA0BE,S,EAItCO,gBAAkB,SAAAC,GAChB,OAAO,EAAK1B,UAAS,SAAAwB,GAAS,sBAC3BE,EAASF,EAAUE,GAAU,O,4CAIlC,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,CAAMrB,SAAUE,KAAKa,oBACrB,0CAEE,cAAC,EAAD,CAAUL,SAAUR,KAAKZ,MAAMoB,qB,GA9BvBF,aCDlBc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d80ebe42.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.name);\r\n\r\n    this.formReset();\r\n  };\r\n\r\n  formReset = () => {\r\n    this.setState({\r\n      name: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            value={this.state.name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button>Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","const Contacts = ({ contacts }) => {\r\n  return contacts.map(contact => <li key={contact.id}>{contact.name}</li>);\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Form from './Components/Form';\nimport Contacts from './Components/Contacts';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    name: '',\n  };\n\n  formSubmitHandler = data => {\n    const contact = {\n      name: data,\n      id: uuidv4(),\n    };\n\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, contact],\n    }));\n  };\n\n  handleIncrement = option => {\n    return this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.formSubmitHandler} />\n        <ul>\n          Contacts\n          <Contacts contacts={this.state.contacts} />\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}